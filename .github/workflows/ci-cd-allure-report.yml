name: CI/CD for Appium Tests with Allure and GitHub Pages

on:
  push:
    branches:
      - main # Cambia esto por la rama donde quieras que se ejecute el workflow

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.13 # Cambia la versión de Python si es necesario

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download APK from S3
        run: |
          mkdir apk
          wget https://my-app-apks.s3.amazonaws.com/app-debug.apk -O apk/app-debug.apk  # Reemplaza con la URL pública correcta de tu APK

      - name: Run Appium tests with pytest and generate Allure results
        run: |
          pytest --alluredir=allure-results

      - name: Install Allure
        run: |
          sudo apt-add-repository ppa:qameta/allure -y
          sudo apt-get update -q
          sudo apt-get install allure -y

      - name: Generate Allure report
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PAGES_TOKEN }}
          publish_dir: ./allure-report

  deploy:
    needs: test # Este paso depende de que el trabajo 'test' termine
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PAGES_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
